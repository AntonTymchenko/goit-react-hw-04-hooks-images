{"version":3,"sources":["components/SearchForm/SearchForm.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/LoadMoreButton/LoadMoreButton.js","components/servece/photo-api.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["SearchForm","handleInput","handleFormSubmit","imgName","className","onSubmit","type","value","autoComplete","autoFocus","placeholder","onChange","Searchbar","state","e","currentTarget","setState","preventDefault","trim","props","toast","error","this","Component","ImageGalleryItem","id","alt","webformatURL","largeImageURL","onClick","scrollStatus","obj","src","setTimeout","window","scrollTo","top","document","documentElement","scrollHeight","behavior","LoadMoreButton","handleLoadMoreButton","fetchPicture","name","page","fetch","then","response","status","json","Status","ImageGallery","imgCards","prevState","changeStatusScrooll","onCLickImg","prevProps","prevName","nextName","hits","length","catch","prevPage","nextPage","color","height","width","timeout","map","tags","message","propType","img","PropTypes","string","isRequired","func","modalRoot","querySelector","Modal","handleKeyDown","code","console","log","onClose","handleBackdropClick","event","target","addEventListener","removeEventListener","imgInfo","createPortal","App","showModal","toggleModal","autoClose","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.154c7bbf.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../SearchForm/SearchForm.css\";\r\n\r\nfunction SearchForm({ handleInput, handleFormSubmit, imgName }) {\r\n  return (\r\n    <form className=\"SearchForm\" onSubmit={handleFormSubmit}>\r\n      <button type=\"submit\" className=\"SearchForm-button\">\r\n        <span className=\"SearchForm-button-label\">Search</span>\r\n      </button>\r\n\r\n      <input\r\n        value={imgName}\r\n        className=\"SearchForm-input\"\r\n        type=\"text\"\r\n        autoComplete=\"off\"\r\n        autoFocus\r\n        placeholder=\"Search images and photos\"\r\n        onChange={handleInput}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n\r\nSearchForm.propTypes = {\r\n  handleInput: PropTypes.func.isRequired,\r\n  handleFormSubmit: PropTypes.func.isRequired,\r\n  imgName: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default SearchForm;\r\n","import React, { Component } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport SearchForm from \"../SearchForm/SearchForm\";\r\nimport \"./Searchbar.css\";\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    imgName: \"\",\r\n  };\r\n  handleInput = (e) => {\r\n    const value = e.currentTarget.value;\r\n    this.setState({\r\n      imgName: value,\r\n    });\r\n  };\r\n  handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.imgName.trim() === \"\") {\r\n      toast.error(\"Введите слово.\");\r\n      return;\r\n    }\r\n    this.props.onSubmit(this.state.imgName);\r\n    this.setState({ imgName: \"\" });\r\n  };\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <SearchForm\r\n          handleFormSubmit={this.handleFormSubmit}\r\n          handleInput={this.handleInput}\r\n          imgName={this.state.imgName}\r\n        />\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./imageGalleryItem.css\";\n\nconst scroll = () => {\n  setTimeout(() => {\n    return window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  }, 100);\n};\n\nfunction ImageGalleryItem({\n  id,\n  alt,\n  webformatURL,\n  largeImageURL,\n  onClick,\n  scrollStatus,\n}) {\n  const obj = {\n    id,\n    alt,\n    largeImageURL,\n  };\n  return (\n    <li\n      key={id}\n      className=\"ImageGalleryItem\"\n      onClick={() => {\n        onClick(obj);\n      }}\n    >\n      <img\n        src={webformatURL}\n        alt={alt}\n        data-imglarge={largeImageURL}\n        className=\"ImageGalleryItem-image\"\n      />\n      {scrollStatus && scroll()}\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  alt: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  scrollStatus: PropTypes.bool.isRequired,\n  webformatURL: PropTypes.string.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import React from \"react\";\nimport \"./LoadMoreButton.css\";\nimport PropTypes from \"prop-types\";\n\nfunction LoadMoreButton({ handleLoadMoreButton }) {\n  return (\n    <button\n      type=\"button\"\n      className=\"Button\"\n      onClick={() => handleLoadMoreButton()}\n    >\n      Load more\n    </button>\n  );\n}\n\nLoadMoreButton.propTypes = {\n  handleLoadMoreButton: PropTypes.func.isRequired,\n};\n\nexport default LoadMoreButton;\n","const URL = `https://pixabay.com/api`;\nconst API_KEY = `key=22260377-843feab13a68cee38d30608c2`;\n\nfunction fetchPicture(name, page) {\n  return fetch(\n    `${URL}/?q=${name}&page=${page}&${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`\n  ).then((response) => {\n    if (response.status === 200) {\n      return response.json();\n    }\n  });\n}\n\nexport default fetchPicture;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\nimport LoadMoreButton from \"../LoadMoreButton/LoadMoreButton\";\nimport \"./ImageGallery.css\";\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { toast } from \"react-toastify\";\nimport fetchPicture from \"../servece/photo-api\";\n\nconst Status = {\n  IDLE: \"idle\",\n  PENDING: \"pending\",\n  RESOLVED: \"resolved\",\n  REJECTED: \"rejected\",\n};\n\nclass ImageGallery extends Component {\n  state = {\n    imgCards: [],\n    error: null,\n    status: Status.IDLE,\n    page: 1,\n    scrollStatus: false,\n  };\n  componentDidUpdate(prevProps, prevState) {\n    const prevName = prevProps.imgName;\n    const nextName = this.props.imgName;\n\n    if (prevName !== nextName) {\n      this.setState({ status: Status.PENDING });\n      const { page } = this.state;\n\n      fetchPicture(nextName, page)\n        .then(({ hits }) => {\n          if (hits.length === 0) {\n            this.setState({\n              status: Status.IDLE,\n            });\n            return toast.error(\"Не таких картинок !!!\");\n          }\n          this.setState({\n            imgCards: [...hits],\n            status: Status.RESOLVED,\n          });\n        })\n        .catch((error) => this.setState({ error, status: Status.REJECTED }));\n    }\n    const prevPage = prevState.page;\n    const nextPage = this.state.page;\n    if (prevPage !== nextPage) {\n      fetchPicture(nextName, nextPage)\n        .then(({ hits }) => {\n          this.setState({\n            imgCards: [...this.state.imgCards, ...hits],\n            status: Status.RESOLVED,\n          });\n        })\n        .catch((error) => this.setState({ error, status: Status.REJECTED }));\n    }\n  }\n  handleLoadMoreButton = () => {\n    this.setState((prevState) => ({\n      page: prevState.page + 1,\n      scrollStatus: true,\n    }));\n  };\n  changeStatusScrooll = (obj) => {\n    const { onCLickImg } = this.props;\n    onCLickImg(obj);\n    this.setState({\n      scrollStatus: false,\n    });\n  };\n\n  render() {\n    const { status, imgCards, error, scrollStatus } = this.state;\n\n    if (status === \"idle\") {\n      return null;\n    }\n    if (status === \"pending\") {\n      return (\n        <div className=\"loader\">\n          <Loader\n            type=\"Bars\"\n            color=\"#00BFFF\"\n            height={80}\n            width={80}\n            timeout={3000}\n          />\n        </div>\n      );\n    }\n    if (status === \"resolved\") {\n      return (\n        <>\n          <ul className=\"ImageGallery\">\n            {imgCards.map(({ id, webformatURL, largeImageURL, tags }) => (\n              <ImageGalleryItem\n                key={id}\n                id={id}\n                alt={tags}\n                webformatURL={webformatURL}\n                largeImageURL={largeImageURL}\n                onClick={this.changeStatusScrooll}\n                scrollStatus={scrollStatus}\n              />\n            ))}\n          </ul>\n          <LoadMoreButton handleLoadMoreButton={this.handleLoadMoreButton} />\n        </>\n      );\n    }\n    if (status === \"rejected\") {\n      return <h2>{error.message}</h2>;\n    }\n  }\n}\nImageGallery.propType = {\n  img: PropTypes.string.isRequired,\n  onCLickImg: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","import React, { Component } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport \"./Modal.css\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      console.log(\"Нажали ESC, нужно закрыть модалку\");\r\n\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = (event) => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n  render() {\r\n    const { imgInfo } = this.props;\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal\">\r\n          <img src={imgInfo.largeImageURL} alt={imgInfo.alt} />\r\n        </div>\r\n      </div>,\r\n      modalRoot\r\n    );\r\n  }\r\n}\r\n","import { Component } from \"react\";\nimport Searchbar from \"./components/Searchbar/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery/ImageGallery\";\nimport Modal from \"./components/Modal\";\n\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport \"./index.css\";\n\nclass App extends Component {\n  state = {\n    imgName: null,\n    showModal: false,\n    src: null,\n  };\n  onSubmit = (imgName) => {\n    this.setState({\n      imgName,\n    });\n  };\n  toggleModal = (id) => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n      src: id,\n    }));\n  };\n\n  render() {\n    const { showModal, src } = this.state;\n    return (\n      <div className=\"App\">\n        {showModal && <Modal onClose={this.toggleModal} imgInfo={src}></Modal>}\n        <ToastContainer autoClose={3000} />\n        <Searchbar onSubmit={this.onSubmit} />\n        <ImageGallery\n          imgName={this.state.imgName}\n          onCLickImg={this.toggleModal}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}