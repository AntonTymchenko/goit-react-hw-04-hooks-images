{"version":3,"sources":["components/SearchForm/SearchForm.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/LoadMoreButton/LoadMoreButton.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","components/servece/photo-api.js","App.js","reportWebVitals.js","index.js"],"names":["SearchForm","handleInput","handleFormSubmit","imgName","className","onSubmit","type","value","autoComplete","autoFocus","placeholder","onChange","Searchbar","useState","setImgName","e","preventDefault","trim","toast","error","currentTarget","ImageGalleryItem","id","alt","webformatURL","largeImageURL","onClick","scrollStatus","obj","src","setTimeout","window","scrollTo","top","document","documentElement","scrollHeight","behavior","LoadMoreButton","handleLoadMoreButton","ImageGallery","onCLickImg","onBtnClick","status","imgCards","setScrollStatus","changeStatusScrooll","color","height","width","timeout","map","tags","message","modalRoot","querySelector","Modal","imgInfo","onClose","handleKeyDown","useCallback","code","removeEventListener","useEffect","addEventListener","createPortal","event","target","URL","API_KEY","fetchPicture","searchQuery","page","pageSize","fetch","then","response","json","Status","App","showModal","setShowModal","setSrc","setPage","setImgCards","setError","setStatus","toggleModal","hits","length","state","catch","autoClose","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f8ea4ea6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../SearchForm/SearchForm.css\";\r\n\r\nfunction SearchForm({ handleInput, handleFormSubmit, imgName }) {\r\n  return (\r\n    <form className=\"SearchForm\" onSubmit={handleFormSubmit}>\r\n      <button type=\"submit\" className=\"SearchForm-button\">\r\n        <span className=\"SearchForm-button-label\">Search</span>\r\n      </button>\r\n\r\n      <input\r\n        value={imgName}\r\n        className=\"SearchForm-input\"\r\n        type=\"text\"\r\n        autoComplete=\"off\"\r\n        autoFocus\r\n        placeholder=\"Search images and photos\"\r\n        onChange={handleInput}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n\r\nSearchForm.propTypes = {\r\n  handleInput: PropTypes.func.isRequired,\r\n  handleFormSubmit: PropTypes.func.isRequired,\r\n  imgName: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default SearchForm;\r\n","import React, { useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport SearchForm from \"../SearchForm/SearchForm\";\r\nimport \"./Searchbar.css\";\r\n\r\nfunction Searchbar({ onSubmit }) {\r\n  const [imgName, setImgName] = useState(\"\");\r\n\r\n  const handleInput = (e) => {\r\n    const value = e.currentTarget.value;\r\n    setImgName(value);\r\n  };\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (imgName.trim() === \"\") {\r\n      toast.error(\"Введите слово.\");\r\n      return;\r\n    }\r\n    onSubmit(imgName);\r\n    setImgName(\"\");\r\n  };\r\n\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <SearchForm\r\n        handleFormSubmit={handleFormSubmit}\r\n        handleInput={handleInput}\r\n        imgName={imgName}\r\n      />\r\n    </header>\r\n  );\r\n}\r\n\r\n// class Searchbar extends Component {\r\n//   state = {\r\n//     imgName: \"\",\r\n//   };\r\n//   handleInput = (e) => {\r\n//     const value = e.currentTarget.value;\r\n//     this.setState({\r\n//       imgName: value,\r\n//     });\r\n//   };\r\n//   handleFormSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     if (this.state.imgName.trim() === \"\") {\r\n// toast.error(\"Введите слово.\");\r\n// return;\r\n//     }\r\n//     this.props.onSubmit(this.state.imgName);\r\n//     this.setState({ imgName: \"\" });\r\n//   };\r\n//   render() {\r\n//     return (\r\n// <header className=\"Searchbar\">\r\n//   <SearchForm\r\n//     handleFormSubmit={this.handleFormSubmit}\r\n//     handleInput={this.handleInput}\r\n//     imgName={this.state.imgName}\r\n//   />\r\n// </header>\r\n//     );\r\n//   }\r\n// }\r\n\r\nexport default Searchbar;\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./imageGalleryItem.css\";\n\nconst scroll = () => {\n  setTimeout(() => {\n    return window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  }, 100);\n};\n\nfunction ImageGalleryItem({\n  id,\n  alt,\n  webformatURL,\n  largeImageURL,\n  onClick,\n  scrollStatus,\n}) {\n  const obj = {\n    id,\n    alt,\n    largeImageURL,\n  };\n  return (\n    <li\n      key={id}\n      className=\"ImageGalleryItem\"\n      onClick={() => {\n        onClick(obj);\n      }}\n    >\n      <img\n        src={webformatURL}\n        alt={alt}\n        data-imglarge={largeImageURL}\n        className=\"ImageGalleryItem-image\"\n      />\n      {scrollStatus && scroll()}\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  alt: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  scrollStatus: PropTypes.bool.isRequired,\n  webformatURL: PropTypes.string.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import React from \"react\";\nimport \"./LoadMoreButton.css\";\nimport PropTypes from \"prop-types\";\n\nfunction LoadMoreButton({ handleLoadMoreButton }) {\n  return (\n    <button\n      type=\"button\"\n      className=\"Button\"\n      onClick={() => handleLoadMoreButton()}\n    >\n      Load more\n    </button>\n  );\n}\n\nLoadMoreButton.propTypes = {\n  handleLoadMoreButton: PropTypes.func.isRequired,\n};\n\nexport default LoadMoreButton;\n","import React, { useState } from \"react\";\n\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\nimport LoadMoreButton from \"../LoadMoreButton/LoadMoreButton\";\nimport \"./ImageGallery.css\";\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nfunction ImageGallery({ onCLickImg, onBtnClick, error, status, imgCards }) {\n  const [scrollStatus, setScrollStatus] = useState(false);\n\n  function handleLoadMoreButton() {\n    onBtnClick();\n    setScrollStatus(true);\n  }\n\n  const changeStatusScrooll = (obj) => {\n    onCLickImg(obj);\n    setScrollStatus(false);\n  };\n\n  if (status === \"idle\") {\n    return null;\n  }\n  if (status === \"pending\") {\n    return (\n      <div className=\"loader\">\n        <Loader\n          type=\"Bars\"\n          color=\"#00BFFF\"\n          height={80}\n          width={80}\n          timeout={3000}\n        />\n      </div>\n    );\n  }\n  if (status === \"resolved\") {\n    return (\n      <>\n        <ul className=\"ImageGallery\">\n          {imgCards.map(({ id, webformatURL, largeImageURL, tags }) => (\n            <ImageGalleryItem\n              key={id}\n              id={id}\n              alt={tags}\n              webformatURL={webformatURL}\n              largeImageURL={largeImageURL}\n              onClick={changeStatusScrooll}\n              scrollStatus={scrollStatus}\n            />\n          ))}\n        </ul>\n        <LoadMoreButton handleLoadMoreButton={handleLoadMoreButton} />\n      </>\n    );\n  }\n  if (status === \"rejected\") {\n    return <h2>{error.message}</h2>;\n  }\n}\nexport default ImageGallery;\n","import React, { useEffect, useCallback } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport \"./Modal.css\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nexport default function Modal({ imgInfo, onClose }) {\r\n  const handleKeyDown = useCallback(\r\n    (e) => {\r\n      if (e.code === \"Escape\") {\r\n        onClose();\r\n        window.removeEventListener(\"keydown\", handleKeyDown);\r\n      }\r\n      return;\r\n    },\r\n    [onClose]\r\n  );\r\n\r\n  const handleBackdropClick = (event) => {\r\n    if (event.currentTarget === event.target) {\r\n      onClose();\r\n      window.removeEventListener(\"keydown\", handleKeyDown);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n  }, [handleKeyDown]);\r\n\r\n  return createPortal(\r\n    <div className=\"Overlay\" onClick={handleBackdropClick}>\r\n      <div className=\"Modal\">\r\n        <img src={imgInfo.largeImageURL} alt={imgInfo.alt} />\r\n      </div>\r\n    </div>,\r\n    modalRoot\r\n  );\r\n}\r\n","const URL = `https://pixabay.com/api`;\nconst API_KEY = `key=22260377-843feab13a68cee38d30608c2`;\n\nfunction fetchPicture({ searchQuery = \"\", page = 1, pageSize = 12 } = {}) {\n  return fetch(\n    `${URL}/?q=${searchQuery}&page=${page}&${API_KEY}&image_type=photo&orientation=horizontal&per_page=${pageSize}`\n  ).then((response) => {\n    if (response.status === 200) {\n      return response.json();\n    }\n  });\n}\n\n// function fetchPicture(name, page) {\n// return fetch(\n//   `${URL}/?q=${name}&page=${page}&${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`\n// ).then((response) => {\n//   if (response.status === 200) {\n//     return response.json();\n//   }\n// });\n// }\n\nexport default fetchPicture;\n","import { useState, useEffect } from \"react\";\nimport Searchbar from \"./components/Searchbar/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery/ImageGallery\";\nimport Modal from \"./components/Modal\";\nimport { toast } from \"react-toastify\";\nimport fetchPicture from \"../src/components/servece/photo-api\";\n\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport \"./index.css\";\n\nconst Status = {\n  IDLE: \"idle\",\n  PENDING: \"pending\",\n  RESOLVED: \"resolved\",\n  REJECTED: \"rejected\",\n};\n\nfunction App() {\n  const [imgName, setImgName] = useState(\"\");\n  const [showModal, setShowModal] = useState(false);\n  const [src, setSrc] = useState(null);\n  const [page, setPage] = useState(1);\n  const [imgCards, setImgCards] = useState([]);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n\n  const toggleModal = (id) => {\n    setShowModal(!showModal);\n    setSrc(id);\n  };\n\n  const onSubmit = (imgName) => {\n    setImgName(imgName);\n    setPage(1);\n    setImgCards([]);\n    setError(null);\n  };\n\n  useEffect(() => {\n    if (!imgName) {\n      return;\n    }\n\n    const fetchImgCOllection = () => {\n      setStatus(Status.PENDING);\n\n      fetchPicture({ searchQuery: imgName, page })\n        .then(({ hits }) => {\n          if (hits.length === 0) {\n            setStatus(Status.IDLE);\n            return toast.error(\"Не таких картинок !!!\");\n          }\n          setImgCards((state) => [...state, ...hits]);\n          setStatus(Status.RESOLVED);\n        })\n        .catch((error) => {\n          setError(error);\n          setStatus(Status.REJECTED);\n        });\n    };\n    fetchImgCOllection();\n  }, [imgName, page]);\n\n  return (\n    <div className=\"App\">\n      {showModal && <Modal onClose={toggleModal} imgInfo={src}></Modal>}\n      <ToastContainer autoClose={3000} />\n      <Searchbar onSubmit={onSubmit} />\n      <ImageGallery\n        imgCards={imgCards}\n        error={error}\n        status={status}\n        onCLickImg={toggleModal}\n        onBtnClick={() => setPage((state) => state + 1)}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}